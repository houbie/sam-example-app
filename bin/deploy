#!/usr/bin/env python3

import argparse
import configparser
import os
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument("--profile", help="Use a specific profile from your credential file to get AWS credentials.")
parser.add_argument("--region", help="Set the AWS Region of the service (e.g. us-east-1).")
args = parser.parse_args()

deploy_cmd = "sam deploy "
deploy_cmd += " --profile " + args.profile if args.profile else ''
deploy_cmd += " --region " + args.region if args.region else ''
os.system(deploy_cmd)

get_stack_output_cmd = "aws cloudformation describe-stacks --stack-name sam-example-app \
    --query 'Stacks[0].Outputs[?OutputKey==`{}`].OutputValue' \
    --output text"
get_stack_output_cmd += " --profile " + args.profile if args.profile else ''
get_stack_output_cmd += " --region " + args.region if args.region else ''

sam_managed_api_url = subprocess.run(get_stack_output_cmd.format("SamManagedApiUrl"),
                                     shell=True, capture_output=True).stdout
s3_event_api_url = subprocess.run(get_stack_output_cmd.format("S3EventApiUrl"),
                                  shell=True, capture_output=True).stdout

config = configparser.ConfigParser()
config['DEFAULT'] = {"sam_managed_api_url": sam_managed_api_url.decode("utf-8"),
                     "s3_event_api_url": s3_event_api_url.decode("utf-8")}
with open("stack-output.ini", "w") as configfile:
    config.write(configfile)
